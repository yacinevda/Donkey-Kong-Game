import os
import random
import pygame

os.environ['SDL_VIDEO_CENTERED'] = '1' #Geeft informatie over het scherm en wordt gebruikt in spel, call voor pygame.init()
pygame.init()
info = pygame.display.Info()
screen_width, screen_height = info.current_w, info.current_h #om spel fullscreen te maken
window_width, window_height = screen_width - 800, screen_height - 150 #proberen om scherm vierkant te maken

timer = pygame.time.Clock() #to not overclock the game
fps = 60

#gebruik RNG
pygame.display.set_caption('Donkey Kong Simulatie')
#python.display.set_icon(image file") - als ik icoon wil veranderen

screen = pygame.display.set_mode([window_width, window_height]) #bepalen hoe het window gaat zijn voor de rest van spel 
section_width = window_width // 32 #round down to the closest integer which is going to be the width of the whole section
section_height = window_height // 32
slope = section_height // 8 #omdat er 8 verschillende platformen zijn met verschillende hoogtes = rico
#scherm verdelen in meerdere tegels 


class Bridge:
    def __init__(self, x_pos, y_pos, length): #need x and y coordinates and length to draw and define bridge
        self.x_pos = x_pos * section_width #internal versions of variables that store info from the outside when creating instances of objects
        self.y_pos = y_pos 
        self.length = length
        self.top = self.draw() #everything just walks on the bridges
    
    def draw(self):
        line_width = 7
        platform_color = (225, 51, 129)
        for i in range(self.length):
            bot_coord = self.y_pos + section_height
            left_coord = self.x_pos + (section_width * i)
            mid_coord = left_coord + (section_width * 0.5)
        

#function to draw red platforms and ladders
def draw_screen(): 
    platforms_list = []
    ladders_list = []
    

#while loop dat de hele tijd aan het runnen is wanneer het spel bezig is. variabele om het te meten 
run = True
while run:
    screen.fill('black')
    timer.tick(fps)
    #draw platforms and ladders on the screen in dedicated function
    draw_screen()
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
    
    pygame.display.flip() #to make sure that everything that we draw on the screen gets drawn every iteration of program
pygame.quit() #press red x button and close button